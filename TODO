SuperTux specific stuff:
========================

* make a release and let SuperTux link to the tags/tinygettext-0.1.0 instead of trunk/

* move this into SuperTux:

  // use findlocale to setup language
  FL_Locale *locale;
  FL_FindLocale( &locale, FL_MESSAGES );
  if(locale->lang) {
    if (locale->country) {
      dictionary_manager->set_language(get_language_def(std::string(locale->lang)+"_"+std::string(locale->country)));
    } else {
      dictionary_manager->set_language(get_language_def(locale->lang));
    }
  }
  FL_FreeLocale( &locale );

* SUPERTUX_LANG needs to be handled in SuperTux

tinygettext specific stuff:
===========================

* get rid of goto

* POParser can handle Big5, but needs testing.
  Big5 is one byte for ASCII letters and two bytes for chinese ones,
  this means some two byte characters collide with '\', some .po files
  seem to escape the \ properly so that the string can be read as
  usual, while others don't.

* _()  -> getext() (gettext default)
  N_(id) -> gettext_noop(id) (gettext default)
  C_(ctxt, id) -> pgettext(ctxt, id) (Gnome does this: http://library.gnome.org/devel/glib/2.16/glib-I18N.html#Q-:CAPS)
  NC_(ctxt, id) -> pgettext(ctxt, id) (Gnome does this: http://library.gnome.org/devel/glib/2.16/glib-I18N.html#Q-:CAPS)

* add more languages (i.e. all that are common in free software, list
  currently seems rather lacking)

* add a way to toggle if fuzzy messages should be included or not
  (requires changes to POParser)

* comments should be parsed, since they contain meta information such
  as fuzzy markers

* std::set<std::string> DictionaryManager::get_languages() should return std::set<Language>

* enumerating files should fallback to more generic languages, i.e.:

  de_AT should load de.po (somewhat already the case, but different mechanic then supertux)

* iconv handling needs cleanup, since some systems don't provide
  iconv, but SDL does and is used by many games, currently HAVE_SDL
  macro seems to weak a fix. We could copy SDL's iconv handling into
  tinygettext.

* figure out how up-to-date other tinygettext implementations in the
  wild are (LinCity):

  Pingus: 
  -------
  dictionary.hpp (synced with Pingus)
  dictionary_manager.hpp (PhysFS vs opendir())
  language_def.hpp (synced with Pingus)
  po_file_reader.hpp (UTF-8 0xef-'header', lots of stuff from mathner)
  tinygettext.hpp (iconv vs convert)

* get rid of TRANSLATION_DEBUG, turn it into a specific log level:
  log_warning, log_info, log_error

Random Unimportant Stuff
========================

* a hashmap instead of std::map might be a good idea

* support for .gmo files would be cool

tinygettext Documentation:
==========================

* document how to use tinygettext and make it work like gettext

* Customizability could use grouping and documentation or other means
  to make it more obvious:

  - POParser::pedantic
  - enumerate_files (list files in directory)
  - free_list (cleanup, of the above)
  - open file (return std::istream)
  - iconv (???)
  - logging (log_callback(std::string))


# EOF #
