* void
DictionaryManager::add_directory(const std::string& pathname)
{
...
  set_language(current_language); // FIXME: Seems very stupid, since it triggers a re-read of the .po files
...
}

* DictionaryManager: Does it need to have current_dict? Or should that
  be handled at application level?

* move this into SuperTux:

  // use findlocale to setup language
  FL_Locale *locale;
  FL_FindLocale( &locale, FL_MESSAGES );
  if(locale->lang) {
    if (locale->country) {
      set_language(get_language_def(std::string(locale->lang)+"_"+std::string(locale->country)));
    } else {
      set_language(get_language_def(locale->lang));
    }
  }
  FL_FreeLocale( &locale );


* implent for LanguageDef

  /** Language code: de, en, ... (always two letters lowercase) */
  std::string get_language_code() {}

  /** Country code: US, BR, AT, DE, ... (always two letters uppercase) */
  std::string get_country_code()  {}

* std::set<std::string> DictionaryManager::get_languages() should return std::set<Language>

* enumerating files should fallback to more generic languages, i.e.:

  de_AT should load de.po (somewhat already the case, but different mechanic then supertux

* SUPERTUX_LANG needs to be handled in SuperTux

* Customizability:

  - enumerate_files (list files in directory)
  - free_list (cleanup, of the above)
  - open file (return std::istream)
  - iconv (???)
  - logging (log_callback(std::string))

* translate() char* vs string needs cleanup

* document how to use tinygettext and make it work like gettext

dictionary.hpp (synced with Pingus)
dictionary_manager.hpp (PhysFS vs opendir())
language_def.hpp (synced with Pingus)
po_file_reader.hpp (UTF-8 0xef-'header', lots of stuff from mathner)
tinygettext.hpp (iconv vs convert)

* get rid of TRANSLATION_DEBUG, turn it into a specific log level

* DictionaryManager::DictionaryManager() is highly unportable, seems
  best to kick it out and let the application deal with the problem.
  This also means kicking out findlocale.cpp and findlocale.hpp

* DictionaryManager manager parses /usr/share/locale/locale.alias,
  which doesn't sound like a good idea and would likely be better if
  it would just be a buildin list, also there is /etc/locale.alias
  which isn't handled at all.

  see DictionaryManager::parseLocaleAliases()

* tinygettext has gained a lot of external dependecies in SuperTux:
  SDL, physfs, log.h, config.h, ... these have to be trimmed down or
  #ifdef'ed with HAVE_LIBSDL, HAVE_PHYSFS

* comments should be parsed, since they contain meta information such
  as fuzzy markers

* a hashmap instead of std::map might be a good idea

* support for .gmo files would be cool

* a recomment procedure do handle words with multiple meanings should
  be documented:

  Exit -> Ausgang
  Exit -> Beenden

# EOF #
