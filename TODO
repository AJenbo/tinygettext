SuperTux specific stuff:
========================

* make a release and let SuperTux link to the tags/tinygettext-0.1.0 instead of trunk/

* move this into SuperTux:

  // use findlocale to setup language
  FL_Locale *locale;
  FL_FindLocale( &locale, FL_MESSAGES );
  if(locale->lang) {
    if (locale->country) {
      dictionary_manager->set_language(get_language_def(std::string(locale->lang)+"_"+std::string(locale->country)));
    } else {
      dictionary_manager->set_language(get_language_def(locale->lang));
    }
  }
  FL_FreeLocale( &locale );

* SUPERTUX_LANG needs to be handled in SuperTux

tinygettext specific stuff:
===========================

* a recomment procedure do handle words with multiple meanings should
  be documented:

  Exit -> Ausgang
  Exit -> Beenden

  See:

  % info gettext contexts

  pgettext (const char *msgctxt, const char *msgid);
  npgettext (const char *msgctxt, const char *msgid, const char *msgplural, int n);

  #define GETTEXT_CONTEXT_GLUE "\004"

* add more languages (i.e. all that are common in free software, list
  currently seems rather lacking)

* rename POFileReader, since it reads from streams, not files
  (POReader, POParser, ... ?)

* add a way to toggle if fuzzy messages should be included or not
  (requires changes to POFileReader)

* Limit parser to only accept valid .po files, currently it seems to
  accept way to much. Making it line oriented should make things quite easy

  % info gettext PO

* comments should be parsed, since they contain meta information such
  as fuzzy markers

* std::set<std::string> DictionaryManager::get_languages() should return std::set<Language>

* enumerating files should fallback to more generic languages, i.e.:

  de_AT should load de.po (somewhat already the case, but different mechanic then supertux)

* Customizability could use grouping or other means to make it more
  abvious:

  - enumerate_files (list files in directory)
  - free_list (cleanup, of the above)
  - open file (return std::istream)
  - iconv (???)
  - logging (log_callback(std::string))

* iconv handling needs cleanup, since some systems don't provide
  iconv, but SDL does and is used by many games, currently HAVE_SDL
  macro seems to weak a fix

* translate() char* vs string needs cleanup

* figure out how up-to-date other tinygettext implementations in the
  wild are (LinCity):

Pingus: 
-------
dictionary.hpp (synced with Pingus)
dictionary_manager.hpp (PhysFS vs opendir())
language_def.hpp (synced with Pingus)
po_file_reader.hpp (UTF-8 0xef-'header', lots of stuff from mathner)
tinygettext.hpp (iconv vs convert)

* get rid of TRANSLATION_DEBUG, turn it into a specific log level

* a hashmap instead of std::map might be a good idea

* support for .gmo files would be cool

tinygettext Documentation:
==========================

* document how to use tinygettext and make it work like gettext

# EOF #
